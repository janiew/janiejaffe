{"version":3,"file":"component---src-templates-blog-post-js-e4e5fc17250ea5e7f9cb.js","mappings":"6KAGO,MAAMA,EAAMA,KAAO,IAADC,EAAAC,EACvB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzBJ,EAAGE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBI,OACF,QAAzBH,EAAGC,EAAKG,KAAKC,oBAAY,IAAAL,GAAtBA,EAAwBM,OAEvC,OACEC,EAAAA,cAAA,OAAKC,UAAU,QACZL,aAAM,EAANA,EAAQM,OACPF,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAASJ,EAAOM,MAAc,KAAEN,aAAM,EAANA,EAAQO,UAAW,KAClD,KAMLH,EAAAA,cAAA,SAAG,oCACgCA,EAAAA,cAAA,SAAG,QAAQ,UAAOA,EAAAA,cAAA,SAAG,SAAS,SAEjEA,EAAAA,cAAA,SACEA,EAAAA,cAAA,SAAG,6BAED,C,6FCmCV,UApEyBI,IAAyB,IAADZ,EAAA,IAAvB,KAAEE,EAAI,SAAEW,GAAUD,EAC1C,MAAME,EAAOZ,EAAKa,eACZC,GAAkC,QAAtBhB,EAAAE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBiB,QAAS,SAC7C,SAAEC,EAAQ,KAAEC,GAASjB,EACrBkB,GAAQC,EAAAA,EAAAA,GAASP,EAAKQ,YAAYF,OAExC,OACEZ,EAAAA,cAACe,EAAAA,EAAM,CAACV,SAAUA,EAAUI,MAAOD,GACjCR,EAAAA,cAACgB,EAAAA,EAAG,CACFP,MAAOH,EAAKQ,YAAYL,MACxBQ,YAAaX,EAAKQ,YAAYG,aAAeX,EAAKY,UAEpDlB,EAAAA,cAAA,WACEC,UAAU,YACVkB,WAAS,EACTC,SAAS,6BAETpB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIqB,SAAS,YAAYf,EAAKQ,YAAYL,OAC1CT,EAAAA,cAAA,SAAIM,EAAKQ,YAAYQ,OAEvBtB,EAAAA,cAACuB,EAAAA,EAAW,CACVX,MAAOA,EACPY,MAAO,CACLC,KAAM,MACNC,UAAW,mBACXC,aAAc,UAGlB3B,EAAAA,cAAA,WACE4B,wBAAyB,CAAEC,OAAQvB,EAAKwB,MACxCT,SAAS,gBAEXrB,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACT,EAAAA,EAAG,QAGRS,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,MACEwB,MAAO,CACLO,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGXnC,EAAAA,cAAA,UACGU,GACCV,EAAAA,cAACoC,EAAAA,KAAI,CAACC,GAAI3B,EAAS4B,OAAOC,KAAMC,IAAI,QAAO,KACtC9B,EAASI,YAAYL,QAI9BT,EAAAA,cAAA,UACGW,GACCX,EAAAA,cAACoC,EAAAA,KAAI,CAACC,GAAI1B,EAAK2B,OAAOC,KAAMC,IAAI,QAC7B7B,EAAKG,YAAYL,MAAM,SAM3B,C","sources":["webpack://janiejaffe.com/./src/components/bio.js","webpack://janiejaffe.com/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport const Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          {/* <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a> */}\n        </p>\n      )}\n      <p>\n        You can reach her at janiejaffe0 <i>(at)</i> gmail <i>(dot)</i> com.\n      </p>\n      <p>\n        <i>Next gig: 9/28 @ Cutelab</i>\n      </p>\n    </div>\n  )\n}\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport { Bio } from \"../components/bio\"\nimport { Layout } from \"../components/layout\"\nimport { Seo } from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const image = getImage(post.frontmatter.image)\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <GatsbyImage\n          image={image}\n          style={{\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            marginBottom: \"16px\",\n          }}\n        />\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        image {\n          childImageSharp {\n            gatsbyImageData(width: 800, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","name","summary","_ref","location","post","markdownRemark","siteTitle","title","previous","next","image","getImage","frontmatter","Layout","Seo","description","excerpt","itemScope","itemType","itemProp","date","GatsbyImage","style","left","transform","marginBottom","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}