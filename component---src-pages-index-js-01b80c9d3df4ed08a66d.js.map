{"version":3,"file":"component---src-pages-index-js-01b80c9d3df4ed08a66d.js","mappings":"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","sources":["webpack://janiejaffe.com/./src/components/bio.js","webpack://janiejaffe.com/./src/components/postlist.js","webpack://janiejaffe.com/./node_modules/@react-hook/latest/dist/module/index.js","webpack://janiejaffe.com/./node_modules/@react-hook/debounce/dist/module/index.js","webpack://janiejaffe.com/./node_modules/@react-hook/event/dist/module/index.js","webpack://janiejaffe.com/./node_modules/@react-hook/window-size/dist/module/index.js","webpack://janiejaffe.com/./node_modules/@essentials/memoize-one/dist/module/index.js","webpack://janiejaffe.com/./node_modules/@essentials/one-key-map/dist/module/index.js","webpack://janiejaffe.com/./node_modules/trie-memoize/dist/module/index.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/elements-cache.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/use-force-update.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/use-masonry.js","webpack://janiejaffe.com/./node_modules/@essentials/raf/dist/module/index.js","webpack://janiejaffe.com/./node_modules/@essentials/request-timeout/dist/module/index.js","webpack://janiejaffe.com/./node_modules/@react-hook/throttle/dist/module/index.js","webpack://janiejaffe.com/./node_modules/@react-hook/window-scroll/dist/module/index.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/masonry-scroller.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/use-scroller.js","webpack://janiejaffe.com/./node_modules/@react-hook/passive-layout-effect/dist/module/index.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/use-container-position.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/interval-tree.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/use-positioner.js","webpack://janiejaffe.com/./node_modules/raf-schd/dist/raf-schd.esm.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/use-resize-observer.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/use-scroll-to-index.js","webpack://janiejaffe.com/./node_modules/masonic/dist/module/masonry.js","webpack://janiejaffe.com/./src/components/allposts.js","webpack://janiejaffe.com/./src/pages/index.js","webpack://janiejaffe.com/./node_modules/classnames/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport const Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          {/* <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a> */}\n        </p>\n      )}\n      <p>\n        You can reach her at janiejaffe0 <i>(at)</i> gmail <i>(dot)</i> com.\n      </p>\n      <p>\n        <i>Next gig: 9/28 @ Cutelab</i>\n      </p>\n    </div>\n  )\n}\n","import * as React from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport classNames from \"classnames\"\n\nexport const PostList = ({ activeTags, setTags }) => {\n  const data = useStaticQuery(graphql`\n    query PostListQuery {\n      allMarkdownRemark(\n        filter: { frontmatter: { contenttype: { eq: \"post\" } } }\n        sort: { fields: [frontmatter___date], order: DESC }\n      ) {\n        nodes {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MM·DD·YY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = data.allMarkdownRemark.nodes\n  const tags = []\n\n  const onClickTag = tag => () => {\n    if (activeTags?.includes(tag)) {\n      setTags(() => activeTags.filter(t => t !== tag))\n    } else {\n      setTags(() => [...activeTags, tag])\n    }\n  }\n  const postLinks = posts.length ? (\n    <ul>\n      {posts.map(post => {\n        console.log(post)\n        const title = post.frontmatter.title || post.fields.slug\n        if (post.frontmatter.tags && post.frontmatter.tags.length) {\n          tags.push(...post.frontmatter.tags)\n        }\n        return (\n          <li key={post.fields.slug} className=\"postlist-link\">\n            <Link to={post.fields.slug} itemProp=\"url\">\n              <span className=\"postlist-title\">{title}</span>\n            </Link>\n            <span className=\"postlist-date\">{post.frontmatter?.date}</span>\n          </li>\n        )\n      })}\n    </ul>\n  ) : (\n    <p>no posts found</p>\n  )\n\n  const tagset = new Set(tags)\n  const tagLinks = (\n    <div className=\"taglist\">\n      {[...tagset].map(tag => (\n        <div\n          className={classNames(\"tag\", { active: activeTags?.includes(tag) })}\n          onClick={onClickTag(tag)}\n        >\n          {tag}\n        </div>\n      ))}\n    </div>\n  )\n\n  return (\n    <div className=\"postlist\">\n      {/* <h5>Tags</h5> */}\n      {tagLinks}\n      {/* <h5>Posts</h5>\n      {postLinks} */}\n    </div>\n  )\n}\n","import * as React from 'react';\n\nconst useLatest = current => {\n  const storedValue = React.useRef(current);\n  React.useEffect(() => {\n    storedValue.current = current;\n  });\n  return storedValue;\n};\n\nexport default useLatest;","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nexport const useDebounceCallback = (callback, wait = 100, leading = false) => {\n  const storedCallback = useLatest(callback);\n  const timeout = React.useRef();\n  const deps = [wait, leading, storedCallback]; // Cleans up pending timeouts when the deps change\n\n  function _ref() {\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = void 0;\n  }\n\n  React.useEffect(() => _ref, deps);\n\n  function _ref2() {\n    timeout.current = void 0;\n  }\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const {\n      current\n    } = timeout; // Calls on leading edge\n\n    if (current === void 0 && leading) {\n      timeout.current = setTimeout(_ref2, wait); // eslint-disable-next-line prefer-spread\n\n      return storedCallback.current.apply(null, args);\n    } // Clear the timeout every call and start waiting again\n\n\n    current && clearTimeout(current); // Waits for `wait` before invoking the callback\n\n    timeout.current = setTimeout(() => {\n      timeout.current = void 0;\n      storedCallback.current.apply(null, args);\n    }, wait);\n  }, deps);\n};\nexport const useDebounce = (initialState, wait, leading) => {\n  const state = React.useState(initialState);\n  return [state[0], useDebounceCallback(state[1], wait, leading)];\n};","import * as React from 'react';\n\nfunction useEvent(target, type, listener, cleanup) {\n  const storedListener = React.useRef(listener);\n  const storedCleanup = React.useRef(cleanup);\n  React.useEffect(() => {\n    storedListener.current = listener;\n    storedCleanup.current = cleanup;\n  });\n  React.useEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!targetEl) return;\n    let didUnsubscribe = 0;\n\n    function listener(...args) {\n      if (didUnsubscribe) return;\n      storedListener.current.apply(this, args);\n    }\n\n    targetEl.addEventListener(type, listener);\n    const cleanup = storedCleanup.current;\n    return () => {\n      didUnsubscribe = 1;\n      targetEl.removeEventListener(type, listener);\n      cleanup && cleanup();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type]);\n}\n\nexport default useEvent;","import { useDebounce } from '@react-hook/debounce';\nimport useEvent from '@react-hook/event';\nconst emptyObj = {};\nconst win = typeof window === 'undefined' ? null : window;\nconst wv = win && typeof win.visualViewport !== 'undefined' ? win.visualViewport : null;\n\nconst getSize = () => [document.documentElement.clientWidth, document.documentElement.clientHeight];\n\nexport const useWindowSize = function (options) {\n  if (options === void 0) {\n    options = emptyObj;\n  }\n\n  const {\n    wait,\n    leading,\n    initialWidth = 0,\n    initialHeight = 0\n  } = options;\n  const [size, setDebouncedSize] = useDebounce(\n  /* istanbul ignore next */\n  typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize, wait, leading);\n\n  const setSize = () => setDebouncedSize(getSize);\n\n  useEvent(win, 'resize', setSize); // @ts-expect-error\n\n  useEvent(wv, 'resize', setSize);\n  useEvent(win, 'orientationchange', setSize);\n  return size;\n};\nexport const useWindowHeight = options => useWindowSize(options)[1];\nexport const useWindowWidth = options => useWindowSize(options)[0];","const memoOne = (fn, areEqual) => {\n  const equal = areEqual || defaultAreEqual;\n  let args, value;\n  return function () {\n    return !!args && equal(arguments, args) ? value : value = fn.apply(null, args = arguments);\n  };\n};\n\nexport default memoOne;\n\nconst defaultAreEqual = (current, prev) => current[0] === prev[0] && current[1] === prev[1] && current[2] === prev[2] && current[3] === prev[3];","class OneKeyMap {\n  constructor() {\n    this.set = void 0;\n    this.get = void 0;\n    let key, val;\n\n    this.get = k => k === key ? val : void 0;\n\n    this.set = (k, v) => {\n      key = k;\n      val = v;\n    };\n  }\n\n}\n\nexport default OneKeyMap;","const createCache = obj => {\n  try {\n    // @ts-ignore\n    return new obj();\n  } catch (e) {\n    const cache = {};\n    return {\n      set(k, v) {\n        cache[k] = v;\n      },\n\n      get(k) {\n        return cache[k];\n      }\n\n    };\n  }\n};\n\nconst memo = constructors => {\n  const depth = constructors.length,\n        baseCache = createCache(constructors[0]);\n  let base;\n  let map;\n  let i;\n  let node;\n  const one = depth === 1; // quicker access for one and two-argument functions\n\n  const g1 = args => (base = baseCache.get(args[0])) === void 0 || one ? base : base.get(args[1]);\n\n  const s1 = (args, value) => {\n    if (one) baseCache.set(args[0], value);else {\n      if ((base = baseCache.get(args[0])) === void 0) {\n        map = createCache(constructors[1]);\n        map.set(args[1], value);\n        baseCache.set(args[0], map);\n      } else {\n        base.set(args[1], value);\n      }\n    }\n    return value;\n  };\n\n  const g2 = args => {\n    node = baseCache;\n\n    for (i = 0; i < depth; i++) if ((node = node.get(args[i])) === void 0) return;\n\n    return node;\n  };\n\n  const s2 = (args, value) => {\n    node = baseCache;\n\n    for (i = 0; i < depth - 1; i++) {\n      if ((map = node.get(args[i])) === void 0) {\n        map = createCache(constructors[i + 1]);\n        node.set(args[i], map);\n        node = map;\n      } else {\n        node = map;\n      }\n    }\n\n    node.set(args[depth - 1], value);\n    return value;\n  };\n\n  return depth < 3 ? {\n    g: g1,\n    s: s1\n  } : {\n    g: g2,\n    s: s2\n  };\n};\n\nconst memoize = (mapConstructors, fn) => {\n  let item;\n  const {\n    g,\n    s\n  } = memo(mapConstructors);\n  return function () {\n    return (item = g(arguments)) === void 0 ? s(arguments, fn.apply(null, arguments)) : item;\n  };\n};\n\nexport default memoize;","export const elementsCache = /*#__PURE__*/new WeakMap();","import * as React from \"react\";\nexport function useForceUpdate() {\n  const setState = React.useState(emptyObj)[1];\n  return React.useRef(() => setState({})).current;\n}\nconst emptyObj = {};","import memoizeOne from \"@essentials/memoize-one\";\nimport OneKeyMap from \"@essentials/one-key-map\";\nimport useLatest from \"@react-hook/latest\";\nimport * as React from \"react\";\nconst __reactCreateElement__ = React.createElement;\nimport trieMemoize from \"trie-memoize\";\nimport { elementsCache } from \"./elements-cache\";\nimport { useForceUpdate } from \"./use-force-update\";\n\n/**\n * This hook handles the render phases of the masonry layout and returns the grid as a React element.\n *\n * @param options - Options for configuring the masonry layout renderer. See `UseMasonryOptions`.\n * @param options.positioner\n * @param options.resizeObserver\n * @param options.items\n * @param options.as\n * @param options.id\n * @param options.className\n * @param options.style\n * @param options.role\n * @param options.tabIndex\n * @param options.containerRef\n * @param options.itemAs\n * @param options.itemStyle\n * @param options.itemHeightEstimate\n * @param options.itemKey\n * @param options.overscanBy\n * @param options.scrollTop\n * @param options.isScrolling\n * @param options.height\n * @param options.render\n * @param options.onRender\n */\nexport function useMasonry(_ref) {\n  let {\n    // Measurement and layout\n    positioner,\n    resizeObserver,\n    // Grid items\n    items,\n    // Container props\n    as: ContainerComponent = \"div\",\n    id,\n    className,\n    style,\n    role = \"grid\",\n    tabIndex = 0,\n    containerRef,\n    // Item props\n    itemAs: ItemComponent = \"div\",\n    itemStyle,\n    itemHeightEstimate = 300,\n    itemKey = defaultGetItemKey,\n    // Rendering props\n    overscanBy = 2,\n    scrollTop,\n    isScrolling,\n    height,\n    render: RenderComponent,\n    onRender\n  } = _ref;\n  let startIndex = 0;\n  let stopIndex;\n  const forceUpdate = useForceUpdate();\n  const setItemRef = getRefSetter(positioner, resizeObserver);\n  const itemCount = items.length;\n  const {\n    columnWidth,\n    columnCount,\n    range,\n    estimateHeight,\n    size,\n    shortestColumn\n  } = positioner;\n  const measuredCount = size();\n  const shortestColumnSize = shortestColumn();\n  const children = [];\n  const itemRole = role === \"list\" ? \"listitem\" : role === \"grid\" ? \"gridcell\" : undefined;\n  const storedOnRender = useLatest(onRender);\n  overscanBy = height * overscanBy;\n  const rangeEnd = scrollTop + overscanBy;\n  const needsFreshBatch = shortestColumnSize < rangeEnd && measuredCount < itemCount;\n  range( // We overscan in both directions because users scroll both ways,\n  // though one must admit scrolling down is more common and thus\n  // we only overscan by half the downward overscan amount\n  Math.max(0, scrollTop - overscanBy / 2), rangeEnd, (index, left, top) => {\n    const data = items[index];\n    const key = itemKey(data, index);\n    const phaseTwoStyle = {\n      top,\n      left,\n      width: columnWidth,\n      writingMode: \"horizontal-tb\",\n      position: \"absolute\"\n    };\n    /* istanbul ignore next */\n\n    if (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n      throwWithoutData(data, index);\n    }\n\n    children.push( /*#__PURE__*/__reactCreateElement__(ItemComponent, {\n      key: key,\n      ref: setItemRef(index),\n      role: itemRole,\n      style: typeof itemStyle === \"object\" && itemStyle !== null ? Object.assign({}, phaseTwoStyle, itemStyle) : phaseTwoStyle\n    }, createRenderElement(RenderComponent, index, data, columnWidth)));\n\n    if (stopIndex === void 0) {\n      startIndex = index;\n      stopIndex = index;\n    } else {\n      startIndex = Math.min(startIndex, index);\n      stopIndex = Math.max(stopIndex, index);\n    }\n  });\n\n  if (needsFreshBatch) {\n    const batchSize = Math.min(itemCount - measuredCount, Math.ceil((scrollTop + overscanBy - shortestColumnSize) / itemHeightEstimate * columnCount));\n    let index = measuredCount;\n    const phaseOneStyle = getCachedSize(columnWidth);\n\n    for (; index < measuredCount + batchSize; index++) {\n      const data = items[index];\n      const key = itemKey(data, index);\n      /* istanbul ignore next */\n\n      if (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n        throwWithoutData(data, index);\n      }\n\n      children.push( /*#__PURE__*/__reactCreateElement__(ItemComponent, {\n        key: key,\n        ref: setItemRef(index),\n        role: itemRole,\n        style: typeof itemStyle === \"object\" ? Object.assign({}, phaseOneStyle, itemStyle) : phaseOneStyle\n      }, createRenderElement(RenderComponent, index, data, columnWidth)));\n    }\n  } // Calls the onRender callback if the rendered indices changed\n\n\n  React.useEffect(() => {\n    if (typeof storedOnRender.current === \"function\" && stopIndex !== void 0) storedOnRender.current(startIndex, stopIndex, items);\n    didEverMount = \"1\";\n  }, [startIndex, stopIndex, items, storedOnRender]); // If we needed a fresh batch we should reload our components with the measured\n  // sizes\n\n  React.useEffect(() => {\n    if (needsFreshBatch) forceUpdate(); // eslint-disable-next-line\n  }, [needsFreshBatch, positioner]); // gets the container style object based upon the estimated height and whether or not\n  // the page is being scrolled\n\n  const containerStyle = getContainerStyle(isScrolling, estimateHeight(itemCount, itemHeightEstimate));\n  return /*#__PURE__*/__reactCreateElement__(ContainerComponent, {\n    ref: containerRef,\n    key: didEverMount,\n    id: id,\n    role: role,\n    className: className,\n    tabIndex: tabIndex,\n    style: typeof style === \"object\" ? assignUserStyle(containerStyle, style) : containerStyle,\n    children: children\n  });\n}\n/* istanbul ignore next */\n\nfunction throwWithoutData(data, index) {\n  if (!data) {\n    throw new Error(`No data was found at index: ${index}\\n\\n` + `This usually happens when you've mutated or changed the \"items\" array in a ` + `way that makes it shorter than the previous \"items\" array. Masonic knows nothing ` + `about your underlying data and when it caches cell positions, it assumes you aren't ` + `mutating the underlying \"items\".\\n\\n` + `See https://codesandbox.io/s/masonic-w-react-router-example-2b5f9?file=/src/index.js for ` + `an example that gets around this limitations. For advanced implementations, see ` + `https://codesandbox.io/s/masonic-w-react-router-and-advanced-config-example-8em42?file=/src/index.js\\n\\n` + `If this was the result of your removing an item from your \"items\", see this issue: ` + `https://github.com/jaredLunde/masonic/issues/12`);\n  }\n} // This is for triggering a remount after SSR has loaded in the client w/ hydrate()\n\n\nlet didEverMount = \"0\";\n//\n// Render-phase utilities\n// ~5.5x faster than createElement without the memo\nconst createRenderElement = /*#__PURE__*/trieMemoize([OneKeyMap, {}, WeakMap, OneKeyMap], (RenderComponent, index, data, columnWidth) => /*#__PURE__*/__reactCreateElement__(RenderComponent, {\n  index: index,\n  data: data,\n  width: columnWidth\n}));\nconst getContainerStyle = /*#__PURE__*/memoizeOne((isScrolling, estimateHeight) => ({\n  position: \"relative\",\n  width: \"100%\",\n  maxWidth: \"100%\",\n  height: Math.ceil(estimateHeight),\n  maxHeight: Math.ceil(estimateHeight),\n  willChange: isScrolling ? \"contents\" : void 0,\n  pointerEvents: isScrolling ? \"none\" : void 0\n}));\n\nconst cmp2 = (args, pargs) => args[0] === pargs[0] && args[1] === pargs[1];\n\nconst assignUserStyle = /*#__PURE__*/memoizeOne((containerStyle, userStyle) => Object.assign({}, containerStyle, userStyle), // @ts-expect-error\ncmp2);\n\nfunction defaultGetItemKey(_, i) {\n  return i;\n} // the below memoizations for for ensuring shallow equal is reliable for pure\n// component children\n\n\nconst getCachedSize = /*#__PURE__*/memoizeOne(width => ({\n  width,\n  zIndex: -1000,\n  visibility: \"hidden\",\n  position: \"absolute\",\n  writingMode: \"horizontal-tb\"\n}), (args, pargs) => args[0] === pargs[0]);\nconst getRefSetter = /*#__PURE__*/memoizeOne((positioner, resizeObserver) => index => el => {\n  if (el === null) return;\n\n  if (resizeObserver) {\n    resizeObserver.observe(el);\n    elementsCache.set(el, index);\n  }\n\n  if (positioner.get(index) === void 0) positioner.set(index, el.offsetHeight);\n}, // @ts-expect-error\ncmp2);","let u = 'undefined',\n    win = typeof window !== u ? window : {},\n    p = typeof performance !== u ? performance : Date,\n    now = () => p.now(),\n    af = 'AnimationFrame',\n    Caf = 'cancel' + af,\n    Raf = 'request' + af,\n    raf = win[Raf] && /*#__PURE__*/win[Raf].bind(win),\n    caf = win[Caf] && /*#__PURE__*/win[Caf].bind(win);\n\nfunction _ref(h) {\n  return clearTimeout(h);\n}\n\nif (!raf || !caf) {\n  let lastTime = 0;\n\n  raf = callback => {\n    let curr = now(),\n        next = Math.max(lastTime + 1000 / 60, curr);\n    return setTimeout(() => {\n      callback(lastTime = next);\n    }, next - curr);\n  };\n\n  caf = _ref;\n}\n\nexport { raf, caf, now };","/**\n * Copyright 2011, Joe Lambert.\n * Free to use under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n **/\nimport { raf, caf, now } from '@essentials/raf';\nexport const clearRequestTimeout = handle => {\n  caf(handle.v || -1);\n};\nexport const requestTimeout = (fn, ms) => {\n  const start = now(),\n        handle = {};\n\n  const loop = () => {\n    now() - start >= ms ? fn.call(null) : handle.v = raf(loop);\n  };\n\n  handle.v = raf(loop);\n  return handle;\n};\nexport default requestTimeout;","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nconst perf = typeof performance !== 'undefined' ? performance : Date;\n\nconst now = () => perf.now();\n\nexport function useThrottleCallback(callback, fps = 30, leading = false) {\n  const storedCallback = useLatest(callback);\n  const ms = 1000 / fps;\n  const prev = React.useRef(0);\n  const trailingTimeout = React.useRef();\n\n  const clearTrailing = () => trailingTimeout.current && clearTimeout(trailingTimeout.current);\n\n  const deps = [fps, leading, storedCallback]; // Reset any time the deps change\n\n  function _ref() {\n    prev.current = 0;\n    clearTrailing();\n  }\n\n  React.useEffect(() => _ref, deps);\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const rightNow = now();\n\n    const call = () => {\n      prev.current = rightNow;\n      clearTrailing();\n      storedCallback.current.apply(null, args);\n    };\n\n    const current = prev.current; // leading\n\n    if (leading && current === 0) return call(); // body\n\n    if (rightNow - current > ms) {\n      if (current > 0) return call();\n      prev.current = rightNow;\n    } // trailing\n\n\n    clearTrailing();\n    trailingTimeout.current = setTimeout(() => {\n      call();\n      prev.current = 0;\n    }, ms);\n  }, deps);\n}\nexport function useThrottle(initialState, fps, leading) {\n  const state = React.useState(initialState);\n  return [state[0], useThrottleCallback(state[1], fps, leading)];\n}","import { useThrottle } from '@react-hook/throttle';\nimport useEvent from '@react-hook/event';\nconst win = typeof window === 'undefined' ? null : window;\n\nconst getScrollY = () => win.scrollY !== void 0 ? win.scrollY : win.pageYOffset === void 0 ? 0 : win.pageYOffset;\n\nexport const useWindowScroll = (fps = 30) => {\n  const state = useThrottle(typeof window === 'undefined' ? 0 : getScrollY, fps, true);\n  useEvent(win, 'scroll', () => state[1](getScrollY()));\n  return state[0];\n};\nexport default useWindowScroll;","import { useMasonry } from \"./use-masonry\";\nimport { useScroller } from \"./use-scroller\";\n/**\n * A heavily-optimized component that updates `useMasonry()` when the scroll position of the browser `window`\n * changes. This bare-metal component is used by `<Masonry>` under the hood.\n *\n * @param props\n */\n\nexport function MasonryScroller(props) {\n  // We put this in its own layer because it's the thing that will trigger the most updates\n  // and we don't want to slower ourselves by cycling through all the functions, objects, and effects\n  // of other hooks\n  const {\n    scrollTop,\n    isScrolling\n  } = useScroller(props.offset, props.scrollFps); // This is an update-heavy phase and while we could just Object.assign here,\n  // it is way faster to inline and there's a relatively low hit to he bundle\n  // size.\n\n  return useMasonry({\n    scrollTop,\n    isScrolling,\n    positioner: props.positioner,\n    resizeObserver: props.resizeObserver,\n    items: props.items,\n    onRender: props.onRender,\n    as: props.as,\n    id: props.id,\n    className: props.className,\n    style: props.style,\n    role: props.role,\n    tabIndex: props.tabIndex,\n    containerRef: props.containerRef,\n    itemAs: props.itemAs,\n    itemStyle: props.itemStyle,\n    itemHeightEstimate: props.itemHeightEstimate,\n    itemKey: props.itemKey,\n    overscanBy: props.overscanBy,\n    height: props.height,\n    render: props.render\n  });\n}\n\nif (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n  MasonryScroller.displayName = \"MasonryScroller\";\n}","import { clearRequestTimeout, requestTimeout } from \"@essentials/request-timeout\";\nimport useScrollPosition from \"@react-hook/window-scroll\";\nimport * as React from \"react\";\n/**\n * A hook for tracking whether the `window` is currently being scrolled and it's scroll position on\n * the y-axis. These values are used for determining which grid cells to render and when\n * to add styles to the masonry container that maximize scroll performance.\n *\n * @param offset - The vertical space in pixels between the top of the grid container and the top\n *  of the browser `document.documentElement`.\n * @param fps - This determines how often (in frames per second) to update the scroll position of the\n *  browser `window` in state, and as a result the rate the masonry grid recalculates its visible cells.\n *  The default value of `12` has been very reasonable in my own testing, but if you have particularly\n *  heavy `render` components it may be prudent to reduce this number.\n */\n\nexport function useScroller(offset, fps) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (fps === void 0) {\n    fps = 12;\n  }\n\n  const scrollTop = useScrollPosition(fps);\n  const [isScrolling, setIsScrolling] = React.useState(false);\n  const didMount = React.useRef(0);\n  React.useEffect(() => {\n    if (didMount.current === 1) setIsScrolling(true);\n    let didUnsubscribe = false;\n    const to = requestTimeout(() => {\n      if (didUnsubscribe) return; // This is here to prevent premature bail outs while maintaining high resolution\n      // unsets. Without it there will always bee a lot of unnecessary DOM writes to style.\n\n      setIsScrolling(false);\n    }, 40 + 1000 / fps);\n    didMount.current = 1;\n    return () => {\n      didUnsubscribe = true;\n      clearRequestTimeout(to);\n    };\n  }, [fps, scrollTop]);\n  return {\n    scrollTop: Math.max(0, scrollTop - offset),\n    isScrolling\n  };\n}","import React from 'react';\nconst usePassiveLayoutEffect = React[typeof document !== 'undefined' && document.createElement !== void 0 ? 'useLayoutEffect' : 'useEffect'];\nexport default usePassiveLayoutEffect;","import useLayoutEffect from \"@react-hook/passive-layout-effect\";\nimport * as React from \"react\";\n/**\n * A hook for measuring the width of the grid container, as well as its distance\n * from the top of the document. These values are necessary to correctly calculate the number/width\n * of columns to render, as well as the number of rows to render.\n *\n * @param elementRef - A `ref` object created by `React.useRef()`. That ref should be provided to the\n *   `containerRef` property in `useMasonry()`.\n * @param deps - You can force this hook to recalculate the `offset` and `width` whenever this\n *   dependencies list changes. A common dependencies list might look like `[windowWidth, windowHeight]`,\n *   which would force the hook to recalculate any time the size of the browser `window` changed.\n */\n\nexport function useContainerPosition(elementRef, deps) {\n  if (deps === void 0) {\n    deps = emptyArr;\n  }\n\n  const [containerPosition, setContainerPosition] = React.useState({\n    offset: 0,\n    width: 0\n  });\n  useLayoutEffect(() => {\n    const {\n      current\n    } = elementRef;\n\n    if (current !== null) {\n      let offset = 0;\n      let el = current;\n\n      do {\n        offset += el.offsetTop || 0;\n        el = el.offsetParent;\n      } while (el);\n\n      if (offset !== containerPosition.offset || current.offsetWidth !== containerPosition.width) {\n        setContainerPosition({\n          offset,\n          width: current.offsetWidth\n        });\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, deps);\n  return containerPosition;\n}\nconst emptyArr = [];","const RED = 0;\nconst BLACK = 1;\nconst NIL = 2;\nconst DELETE = 0;\nconst KEEP = 1;\n\nfunction addInterval(treeNode, high, index) {\n  let node = treeNode.list;\n  let prevNode;\n\n  while (node) {\n    if (node.index === index) return false;\n    if (high > node.high) break;\n    prevNode = node;\n    node = node.next;\n  }\n\n  if (!prevNode) treeNode.list = {\n    index,\n    high,\n    next: node\n  };\n  if (prevNode) prevNode.next = {\n    index,\n    high,\n    next: prevNode.next\n  };\n  return true;\n}\n\nfunction removeInterval(treeNode, index) {\n  let node = treeNode.list;\n\n  if (node.index === index) {\n    if (node.next === null) return DELETE;\n    treeNode.list = node.next;\n    return KEEP;\n  }\n\n  let prevNode = node;\n  node = node.next;\n\n  while (node !== null) {\n    if (node.index === index) {\n      prevNode.next = node.next;\n      return KEEP;\n    }\n\n    prevNode = node;\n    node = node.next;\n  }\n}\n\nconst NULL_NODE = {\n  low: 0,\n  max: 0,\n  high: 0,\n  C: NIL,\n  // @ts-expect-error\n  P: undefined,\n  // @ts-expect-error\n  R: undefined,\n  // @ts-expect-error\n  L: undefined,\n  // @ts-expect-error\n  list: undefined\n};\nNULL_NODE.P = NULL_NODE;\nNULL_NODE.L = NULL_NODE;\nNULL_NODE.R = NULL_NODE;\n\nfunction updateMax(node) {\n  const max = node.high;\n  if (node.L === NULL_NODE && node.R === NULL_NODE) node.max = max;else if (node.L === NULL_NODE) node.max = Math.max(node.R.max, max);else if (node.R === NULL_NODE) node.max = Math.max(node.L.max, max);else node.max = Math.max(Math.max(node.L.max, node.R.max), max);\n}\n\nfunction updateMaxUp(node) {\n  let x = node;\n\n  while (x.P !== NULL_NODE) {\n    updateMax(x.P);\n    x = x.P;\n  }\n}\n\nfunction rotateLeft(tree, x) {\n  if (x.R === NULL_NODE) return;\n  const y = x.R;\n  x.R = y.L;\n  if (y.L !== NULL_NODE) y.L.P = x;\n  y.P = x.P;\n  if (x.P === NULL_NODE) tree.root = y;else if (x === x.P.L) x.P.L = y;else x.P.R = y;\n  y.L = x;\n  x.P = y;\n  updateMax(x);\n  updateMax(y);\n}\n\nfunction rotateRight(tree, x) {\n  if (x.L === NULL_NODE) return;\n  const y = x.L;\n  x.L = y.R;\n  if (y.R !== NULL_NODE) y.R.P = x;\n  y.P = x.P;\n  if (x.P === NULL_NODE) tree.root = y;else if (x === x.P.R) x.P.R = y;else x.P.L = y;\n  y.R = x;\n  x.P = y;\n  updateMax(x);\n  updateMax(y);\n}\n\nfunction replaceNode(tree, x, y) {\n  if (x.P === NULL_NODE) tree.root = y;else if (x === x.P.L) x.P.L = y;else x.P.R = y;\n  y.P = x.P;\n}\n\nfunction fixRemove(tree, x) {\n  let w;\n\n  while (x !== NULL_NODE && x.C === BLACK) {\n    if (x === x.P.L) {\n      w = x.P.R;\n\n      if (w.C === RED) {\n        w.C = BLACK;\n        x.P.C = RED;\n        rotateLeft(tree, x.P);\n        w = x.P.R;\n      }\n\n      if (w.L.C === BLACK && w.R.C === BLACK) {\n        w.C = RED;\n        x = x.P;\n      } else {\n        if (w.R.C === BLACK) {\n          w.L.C = BLACK;\n          w.C = RED;\n          rotateRight(tree, w);\n          w = x.P.R;\n        }\n\n        w.C = x.P.C;\n        x.P.C = BLACK;\n        w.R.C = BLACK;\n        rotateLeft(tree, x.P);\n        x = tree.root;\n      }\n    } else {\n      w = x.P.L;\n\n      if (w.C === RED) {\n        w.C = BLACK;\n        x.P.C = RED;\n        rotateRight(tree, x.P);\n        w = x.P.L;\n      }\n\n      if (w.R.C === BLACK && w.L.C === BLACK) {\n        w.C = RED;\n        x = x.P;\n      } else {\n        if (w.L.C === BLACK) {\n          w.R.C = BLACK;\n          w.C = RED;\n          rotateLeft(tree, w);\n          w = x.P.L;\n        }\n\n        w.C = x.P.C;\n        x.P.C = BLACK;\n        w.L.C = BLACK;\n        rotateRight(tree, x.P);\n        x = tree.root;\n      }\n    }\n  }\n\n  x.C = BLACK;\n}\n\nfunction minimumTree(x) {\n  while (x.L !== NULL_NODE) x = x.L;\n\n  return x;\n}\n\nfunction fixInsert(tree, z) {\n  let y;\n\n  while (z.P.C === RED) {\n    if (z.P === z.P.P.L) {\n      y = z.P.P.R;\n\n      if (y.C === RED) {\n        z.P.C = BLACK;\n        y.C = BLACK;\n        z.P.P.C = RED;\n        z = z.P.P;\n      } else {\n        if (z === z.P.R) {\n          z = z.P;\n          rotateLeft(tree, z);\n        }\n\n        z.P.C = BLACK;\n        z.P.P.C = RED;\n        rotateRight(tree, z.P.P);\n      }\n    } else {\n      y = z.P.P.L;\n\n      if (y.C === RED) {\n        z.P.C = BLACK;\n        y.C = BLACK;\n        z.P.P.C = RED;\n        z = z.P.P;\n      } else {\n        if (z === z.P.L) {\n          z = z.P;\n          rotateRight(tree, z);\n        }\n\n        z.P.C = BLACK;\n        z.P.P.C = RED;\n        rotateLeft(tree, z.P.P);\n      }\n    }\n  }\n\n  tree.root.C = BLACK;\n}\n\nexport function createIntervalTree() {\n  const tree = {\n    root: NULL_NODE,\n    size: 0\n  }; // we know these indexes are a consistent, safe way to make look ups\n  // for our case so it's a solid O(1) alternative to\n  // the O(log n) searchNode() in typical interval trees\n\n  const indexMap = {};\n  return {\n    insert(low, high, index) {\n      let x = tree.root;\n      let y = NULL_NODE;\n\n      while (x !== NULL_NODE) {\n        y = x;\n        if (low === y.low) break;\n        if (low < x.low) x = x.L;else x = x.R;\n      }\n\n      if (low === y.low && y !== NULL_NODE) {\n        if (!addInterval(y, high, index)) return;\n        y.high = Math.max(y.high, high);\n        updateMax(y);\n        updateMaxUp(y);\n        indexMap[index] = y;\n        tree.size++;\n        return;\n      }\n\n      const z = {\n        low,\n        high,\n        max: high,\n        C: RED,\n        P: y,\n        L: NULL_NODE,\n        R: NULL_NODE,\n        list: {\n          index,\n          high,\n          next: null\n        }\n      };\n\n      if (y === NULL_NODE) {\n        tree.root = z;\n      } else {\n        if (z.low < y.low) y.L = z;else y.R = z;\n        updateMaxUp(z);\n      }\n\n      fixInsert(tree, z);\n      indexMap[index] = z;\n      tree.size++;\n    },\n\n    remove(index) {\n      const z = indexMap[index];\n      if (z === void 0) return;\n      delete indexMap[index];\n      const intervalResult = removeInterval(z, index);\n      if (intervalResult === void 0) return;\n\n      if (intervalResult === KEEP) {\n        z.high = z.list.high;\n        updateMax(z);\n        updateMaxUp(z);\n        tree.size--;\n        return;\n      }\n\n      let y = z;\n      let originalYColor = y.C;\n      let x;\n\n      if (z.L === NULL_NODE) {\n        x = z.R;\n        replaceNode(tree, z, z.R);\n      } else if (z.R === NULL_NODE) {\n        x = z.L;\n        replaceNode(tree, z, z.L);\n      } else {\n        y = minimumTree(z.R);\n        originalYColor = y.C;\n        x = y.R;\n\n        if (y.P === z) {\n          x.P = y;\n        } else {\n          replaceNode(tree, y, y.R);\n          y.R = z.R;\n          y.R.P = y;\n        }\n\n        replaceNode(tree, z, y);\n        y.L = z.L;\n        y.L.P = y;\n        y.C = z.C;\n      }\n\n      updateMax(x);\n      updateMaxUp(x);\n      if (originalYColor === BLACK) fixRemove(tree, x);\n      tree.size--;\n    },\n\n    search(low, high, callback) {\n      const stack = [tree.root];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node === NULL_NODE || low > node.max) continue;\n        if (node.L !== NULL_NODE) stack.push(node.L);\n        if (node.R !== NULL_NODE) stack.push(node.R);\n\n        if (node.low <= high && node.high >= low) {\n          let curr = node.list;\n\n          while (curr !== null) {\n            if (curr.high >= low) callback(curr.index, node.low);\n            curr = curr.next;\n          }\n        }\n      }\n    },\n\n    get size() {\n      return tree.size;\n    }\n\n  };\n}","import * as React from \"react\";\nimport { createIntervalTree } from \"./interval-tree\";\n/**\n * This hook creates the grid cell positioner and cache required by `useMasonry()`. This is\n * the meat of the grid's layout algorithm, determining which cells to render at a given scroll\n * position, as well as where to place new items in the grid.\n *\n * @param options - Properties that determine the number of columns in the grid, as well\n *  as their widths.\n * @param options.columnWidth\n * @param options.width\n * @param deps - This hook will create a new positioner, clearing all existing cached positions,\n *  whenever the dependencies in this list change.\n * @param options.columnGutter\n * @param options.rowGutter\n * @param options.columnCount\n * @param options.maxColumnCount\n */\n\nexport function usePositioner(_ref, deps) {\n  let {\n    width,\n    columnWidth = 200,\n    columnGutter = 0,\n    rowGutter,\n    columnCount,\n    maxColumnCount\n  } = _ref;\n\n  if (deps === void 0) {\n    deps = emptyArr;\n  }\n\n  const initPositioner = () => {\n    const [computedColumnWidth, computedColumnCount] = getColumns(width, columnWidth, columnGutter, columnCount, maxColumnCount);\n    return createPositioner(computedColumnCount, computedColumnWidth, columnGutter, rowGutter !== null && rowGutter !== void 0 ? rowGutter : columnGutter);\n  };\n\n  const positionerRef = React.useRef();\n  if (positionerRef.current === undefined) positionerRef.current = initPositioner();\n  const prevDeps = React.useRef(deps);\n  const opts = [width, columnWidth, columnGutter, rowGutter, columnCount, maxColumnCount];\n  const prevOpts = React.useRef(opts);\n  const optsChanged = !opts.every((item, i) => prevOpts.current[i] === item);\n\n  if (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n    if (deps.length !== prevDeps.current.length) {\n      throw new Error(\"usePositioner(): The length of your dependencies array changed.\");\n    }\n  } // Create a new positioner when the dependencies or sizes change\n  // Thanks to https://github.com/khmm12 for pointing this out\n  // https://github.com/jaredLunde/masonic/pull/41\n\n\n  if (optsChanged || !deps.every((item, i) => prevDeps.current[i] === item)) {\n    const prevPositioner = positionerRef.current;\n    const positioner = initPositioner();\n    prevDeps.current = deps;\n    prevOpts.current = opts;\n\n    if (optsChanged) {\n      const cacheSize = prevPositioner.size();\n\n      for (let index = 0; index < cacheSize; index++) {\n        const pos = prevPositioner.get(index);\n        positioner.set(index, pos !== void 0 ? pos.height : 0);\n      }\n    }\n\n    positionerRef.current = positioner;\n  }\n\n  return positionerRef.current;\n}\n\n/**\n * Creates a cell positioner for the `useMasonry()` hook. The `usePositioner()` hook uses\n * this utility under the hood.\n *\n * @param columnCount - The number of columns in the grid\n * @param columnWidth - The width of each column in the grid\n * @param columnGutter - The amount of horizontal space between columns in pixels.\n * @param rowGutter - The amount of vertical space between cells within a column in pixels (falls back\n * to `columnGutter`).\n */\nexport const createPositioner = function (columnCount, columnWidth, columnGutter, rowGutter) {\n  if (columnGutter === void 0) {\n    columnGutter = 0;\n  }\n\n  if (rowGutter === void 0) {\n    rowGutter = columnGutter;\n  }\n\n  // O(log(n)) lookup of cells to render for a given viewport size\n  // Store tops and bottoms of each cell for fast intersection lookup.\n  const intervalTree = createIntervalTree(); // Track the height of each column.\n  // Layout algorithm below always inserts into the shortest column.\n\n  const columnHeights = new Array(columnCount); // Used for O(1) item access\n\n  const items = []; // Tracks the item indexes within an individual column\n\n  const columnItems = new Array(columnCount);\n\n  for (let i = 0; i < columnCount; i++) {\n    columnHeights[i] = 0;\n    columnItems[i] = [];\n  }\n\n  return {\n    columnCount,\n    columnWidth,\n    set: function (index, height) {\n      if (height === void 0) {\n        height = 0;\n      }\n\n      let column = 0; // finds the shortest column and uses it\n\n      for (let i = 1; i < columnHeights.length; i++) {\n        if (columnHeights[i] < columnHeights[column]) column = i;\n      }\n\n      const top = columnHeights[column] || 0;\n      columnHeights[column] = top + height + rowGutter;\n      columnItems[column].push(index);\n      items[index] = {\n        left: column * (columnWidth + columnGutter),\n        top,\n        height,\n        column\n      };\n      intervalTree.insert(top, top + height, index);\n    },\n    get: index => items[index],\n    // This only updates items in the specific columns that have changed, on and after the\n    // specific items that have changed\n    update: updates => {\n      const columns = new Array(columnCount);\n      let i = 0,\n          j = 0; // determines which columns have items that changed, as well as the minimum index\n      // changed in that column, as all items after that index will have their positions\n      // affected by the change\n\n      for (; i < updates.length - 1; i++) {\n        const index = updates[i];\n        const item = items[index];\n        item.height = updates[++i];\n        intervalTree.remove(index);\n        intervalTree.insert(item.top, item.top + item.height, index);\n        columns[item.column] = columns[item.column] === void 0 ? index : Math.min(index, columns[item.column]);\n      }\n\n      for (i = 0; i < columns.length; i++) {\n        // bails out if the column didn't change\n        if (columns[i] === void 0) continue;\n        const itemsInColumn = columnItems[i]; // the index order is sorted with certainty so binary search is a great solution\n        // here as opposed to Array.indexOf()\n\n        const startIndex = binarySearch(itemsInColumn, columns[i]);\n        const index = columnItems[i][startIndex];\n        const startItem = items[index];\n        columnHeights[i] = startItem.top + startItem.height + rowGutter;\n\n        for (j = startIndex + 1; j < itemsInColumn.length; j++) {\n          const index = itemsInColumn[j];\n          const item = items[index];\n          item.top = columnHeights[i];\n          columnHeights[i] = item.top + item.height + rowGutter;\n          intervalTree.remove(index);\n          intervalTree.insert(item.top, item.top + item.height, index);\n        }\n      }\n    },\n    // Render all cells visible within the viewport range defined.\n    range: (lo, hi, renderCallback) => intervalTree.search(lo, hi, (index, top) => renderCallback(index, items[index].left, top)),\n    estimateHeight: (itemCount, defaultItemHeight) => {\n      const tallestColumn = Math.max(0, Math.max.apply(null, columnHeights));\n      return itemCount === intervalTree.size ? tallestColumn : tallestColumn + Math.ceil((itemCount - intervalTree.size) / columnCount) * defaultItemHeight;\n    },\n    shortestColumn: () => {\n      if (columnHeights.length > 1) return Math.min.apply(null, columnHeights);\n      return columnHeights[0] || 0;\n    },\n\n    size() {\n      return intervalTree.size;\n    },\n\n    all() {\n      return items;\n    }\n\n  };\n};\n\n/* istanbul ignore next */\nconst binarySearch = (a, y) => {\n  let l = 0;\n  let h = a.length - 1;\n\n  while (l <= h) {\n    const m = l + h >>> 1;\n    const x = a[m];\n    if (x === y) return m;else if (x <= y) l = m + 1;else h = m - 1;\n  }\n\n  return -1;\n};\n\nconst getColumns = function (width, minimumWidth, gutter, columnCount, maxColumnCount) {\n  if (width === void 0) {\n    width = 0;\n  }\n\n  if (minimumWidth === void 0) {\n    minimumWidth = 0;\n  }\n\n  if (gutter === void 0) {\n    gutter = 8;\n  }\n\n  columnCount = columnCount || Math.min(Math.floor((width + gutter) / (minimumWidth + gutter)), maxColumnCount || Infinity) || 1;\n  const columnWidth = Math.floor((width - gutter * (columnCount - 1)) / columnCount);\n  return [columnWidth, columnCount];\n};\n\nconst emptyArr = [];","var rafSchd = function rafSchd(fn) {\n  var lastArgs = [];\n  var frameId = null;\n\n  var wrapperFn = function wrapperFn() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n\n    if (frameId) {\n      return;\n    }\n\n    frameId = requestAnimationFrame(function () {\n      frameId = null;\n      fn.apply(void 0, lastArgs);\n    });\n  };\n\n  wrapperFn.cancel = function () {\n    if (!frameId) {\n      return;\n    }\n\n    cancelAnimationFrame(frameId);\n    frameId = null;\n  };\n\n  return wrapperFn;\n};\n\nexport default rafSchd;\n","import rafSchd from \"raf-schd\";\nimport * as React from \"react\";\nimport trieMemoize from \"trie-memoize\";\nimport { elementsCache } from \"./elements-cache\";\nimport { useForceUpdate } from \"./use-force-update\";\n\n/**\n * Creates a resize observer that forces updates to the grid cell positions when mutations are\n * made to cells affecting their height.\n *\n * @param positioner - The masonry cell positioner created by the `usePositioner()` hook.\n */\nexport function useResizeObserver(positioner) {\n  const forceUpdate = useForceUpdate();\n  const resizeObserver = createResizeObserver(positioner, forceUpdate); // Cleans up the resize observers when they change or the\n  // component unmounts\n\n  function _ref() {\n    return resizeObserver.disconnect();\n  }\n\n  React.useEffect(() => _ref, [resizeObserver]);\n  return resizeObserver;\n}\n\nconst _handlerForType = /*#__PURE__*/rafSchd(target => {});\n\nfunction _ref2(handler) {\n  handler.cancel();\n}\n\n/**\n * Creates a resize observer that fires an `updater` callback whenever the height of\n * one or many cells change. The `useResizeObserver()` hook is using this under the hood.\n *\n * @param positioner - A cell positioner created by the `usePositioner()` hook or the `createPositioner()` utility\n * @param updater - A callback that fires whenever one or many cell heights change.\n */\nexport const createResizeObserver = /*#__PURE__*/trieMemoize([WeakMap], // TODO: figure out a way to test this\n\n/* istanbul ignore next */\n(positioner, updater) => {\n  const updates = [];\n  const update = rafSchd(() => {\n    if (updates.length > 0) {\n      // Updates the size/positions of the cell with the resize\n      // observer updates\n      positioner.update(updates);\n      updater(updates);\n    }\n\n    updates.length = 0;\n  });\n\n  const commonHandler = target => {\n    const height = target.offsetHeight;\n\n    if (height > 0) {\n      const index = elementsCache.get(target);\n\n      if (index !== void 0) {\n        const position = positioner.get(index);\n        if (position !== void 0 && height !== position.height) updates.push(index, height);\n      }\n    }\n\n    update();\n  };\n\n  const handlers = new Map();\n\n  const handleEntries = entries => {\n    let i = 0;\n\n    for (; i < entries.length; i++) {\n      const entry = entries[i];\n      const index = elementsCache.get(entry.target);\n      if (index === void 0) continue;\n      let handler = handlers.get(index);\n\n      if (!handler) {\n        handler = rafSchd(commonHandler);\n        handlers.set(index, handler);\n      }\n\n      handler(entry.target);\n    }\n  };\n\n  const ro = new ResizeObserver(handleEntries); // Overrides the original disconnect to include cancelling handling the entries.\n  // Ideally this would be its own method but that would result in a breaking\n  // change.\n\n  const disconnect = ro.disconnect.bind(ro);\n\n  ro.disconnect = () => {\n    disconnect();\n    handlers.forEach(_ref2);\n  };\n\n  return ro;\n});","import useEvent from \"@react-hook/event\";\nimport useLatest from \"@react-hook/latest\";\nimport { useThrottleCallback } from \"@react-hook/throttle\";\nimport * as React from \"react\";\n\n/**\n * A hook that creates a callback for scrolling to a specific index in\n * the \"items\" array.\n *\n * @param positioner - A positioner created by the `usePositioner()` hook\n * @param options - Configuration options\n */\nexport function useScrollToIndex(positioner, options) {\n  var _latestOptions$curren;\n\n  const {\n    align = \"top\",\n    element = typeof window !== \"undefined\" && window,\n    offset = 0,\n    height = typeof window !== \"undefined\" ? window.innerHeight : 0\n  } = options;\n  const latestOptions = useLatest({\n    positioner,\n    element,\n    align,\n    offset,\n    height\n  });\n  const getTarget = React.useRef(() => {\n    const latestElement = latestOptions.current.element;\n    return latestElement && \"current\" in latestElement ? latestElement.current : latestElement;\n  }).current;\n  const [state, dispatch] = React.useReducer((state, action) => {\n    const nextState = {\n      position: state.position,\n      index: state.index,\n      prevTop: state.prevTop\n    };\n    /* istanbul ignore next */\n\n    if (action.type === \"scrollToIndex\") {\n      var _action$value;\n\n      return {\n        position: latestOptions.current.positioner.get((_action$value = action.value) !== null && _action$value !== void 0 ? _action$value : -1),\n        index: action.value,\n        prevTop: void 0\n      };\n    } else if (action.type === \"setPosition\") {\n      nextState.position = action.value;\n    } else if (action.type === \"setPrevTop\") {\n      nextState.prevTop = action.value;\n    } else if (action.type === \"reset\") {\n      return defaultState;\n    }\n\n    return nextState;\n  }, defaultState);\n  const throttledDispatch = useThrottleCallback(dispatch, 15); // If we find the position along the way we can immediately take off\n  // to the correct spot.\n\n  useEvent(getTarget(), \"scroll\", () => {\n    if (!state.position && state.index) {\n      const position = latestOptions.current.positioner.get(state.index);\n\n      if (position) {\n        dispatch({\n          type: \"setPosition\",\n          value: position\n        });\n      }\n    }\n  }); // If the top changes out from under us in the case of dynamic cells, we\n  // want to keep following it.\n\n  const currentTop = state.index !== void 0 && ((_latestOptions$curren = latestOptions.current.positioner.get(state.index)) === null || _latestOptions$curren === void 0 ? void 0 : _latestOptions$curren.top);\n  React.useEffect(() => {\n    const target = getTarget();\n    if (!target) return;\n    const {\n      height,\n      align,\n      offset,\n      positioner\n    } = latestOptions.current;\n\n    if (state.position) {\n      let scrollTop = state.position.top;\n\n      if (align === \"bottom\") {\n        scrollTop = scrollTop - height + state.position.height;\n      } else if (align === \"center\") {\n        scrollTop -= (height - state.position.height) / 2;\n      }\n\n      target.scrollTo(0, Math.max(0, scrollTop += offset)); // Resets state after 400ms, an arbitrary time I determined to be\n      // still visually pleasing if there is a slow network reply in dynamic\n      // cells\n\n      let didUnsubscribe = false;\n      const timeout = setTimeout(() => !didUnsubscribe && dispatch({\n        type: \"reset\"\n      }), 400);\n      return () => {\n        didUnsubscribe = true;\n        clearTimeout(timeout);\n      };\n    } else if (state.index !== void 0) {\n      // Estimates the top based upon the average height of current cells\n      let estimatedTop = positioner.shortestColumn() / positioner.size() * state.index;\n      if (state.prevTop) estimatedTop = Math.max(estimatedTop, state.prevTop + height);\n      target.scrollTo(0, estimatedTop);\n      throttledDispatch({\n        type: \"setPrevTop\",\n        value: estimatedTop\n      });\n    }\n  }, [currentTop, state, latestOptions, getTarget, throttledDispatch]);\n  return React.useRef(index => {\n    dispatch({\n      type: \"scrollToIndex\",\n      value: index\n    });\n  }).current;\n}\nconst defaultState = {\n  index: void 0,\n  position: void 0,\n  prevTop: void 0\n};","import { useWindowSize } from \"@react-hook/window-size\";\nimport * as React from \"react\";\nconst __reactCreateElement__ = React.createElement;\nimport { MasonryScroller } from \"./masonry-scroller\";\nimport { useContainerPosition } from \"./use-container-position\";\nimport { usePositioner } from \"./use-positioner\";\nimport { useResizeObserver } from \"./use-resize-observer\";\nimport { useScrollToIndex } from \"./use-scroll-to-index\";\n\n/**\n * A \"batteries included\" masonry grid which includes all of the implementation details below. This component is the\n * easiest way to get off and running in your app, before switching to more advanced implementations, if necessary.\n * It will change its column count to fit its container's width and will decide how many rows to render based upon\n * the height of the browser `window`.\n *\n * @param props\n */\nexport function Masonry(props) {\n  const containerRef = React.useRef(null);\n  const windowSize = useWindowSize({\n    initialWidth: props.ssrWidth,\n    initialHeight: props.ssrHeight\n  });\n  const containerPos = useContainerPosition(containerRef, windowSize);\n  const nextProps = Object.assign({\n    offset: containerPos.offset,\n    width: containerPos.width || windowSize[0],\n    height: windowSize[1],\n    containerRef\n  }, props);\n  nextProps.positioner = usePositioner(nextProps);\n  nextProps.resizeObserver = useResizeObserver(nextProps.positioner);\n  const scrollToIndex = useScrollToIndex(nextProps.positioner, {\n    height: nextProps.height,\n    offset: containerPos.offset,\n    align: typeof props.scrollToIndex === \"object\" ? props.scrollToIndex.align : void 0\n  });\n  const index = props.scrollToIndex && (typeof props.scrollToIndex === \"number\" ? props.scrollToIndex : props.scrollToIndex.index);\n  React.useEffect(() => {\n    if (index !== void 0) scrollToIndex(index);\n  }, [index, scrollToIndex]);\n  return __reactCreateElement__(MasonryScroller, nextProps);\n}\n\nif (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n  Masonry.displayName = \"Masonry\";\n}","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { Masonry } from \"masonic\"\n\nexport const AllPosts = ({ posts, tags }) => {\n  const key = !!tags ? tags.reduce((t, n) => t + n, \"\") : \"allposts\"\n  if (typeof window === undefined || !Masonry) return null\n  return (\n    <Masonry\n      key={key}\n      className=\"all-posts\"\n      render={PostDisplay}\n      items={posts}\n      columnWidth={400}\n      columnGutter={16}\n    />\n  )\n}\n\nconst PostDisplay = ({ index, data, width }) => {\n  const title = data.frontmatter.title || data.fields.slug\n  const image = getImage(data.frontmatter.image)\n  if (!image) console.log(\"no image for post \" + title)\n  return (\n    <article\n      className=\"post-list-item\"\n      itemScope\n      itemType=\"http://schema.org/Article\"\n      key={data.fields.slug}\n    >\n      <Link to={data.fields.slug} itemProp=\"url\">\n        <header>\n          <h2>\n            <span itemProp=\"headline\">{title}</span>\n          </h2>\n          <small>{data.frontmatter.date}</small>\n        </header>\n        <section>\n          <GatsbyImage image={image} />\n          <p\n            dangerouslySetInnerHTML={{\n              __html: data.frontmatter.description || data.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </section>\n      </Link>\n    </article>\n  )\n}\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport { Bio } from \"../components/bio\"\nimport { Layout } from \"../components/layout\"\nimport { Seo } from \"../components/seo\"\nimport { PostList } from \"../components/postlist\"\nimport { AllPosts } from \"../components/allposts\"\n\nconst PageIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const [tags, setTags] = React.useState([])\n\n  const posts = tags.length\n    ? data.allMarkdownRemark.nodes.filter(n => {\n        console.log(n)\n        console.log(tags)\n        return n.frontmatter.tags?.some(t => tags.includes(t))\n      })\n    : data.allMarkdownRemark.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Janie Jaffe\" />\n      <div className=\"index-main\">\n        <Bio />\n        <hr />\n        <div className=\"index-sub\">\n          <PostList activeTags={tags} setTags={setTags} />\n          <AllPosts posts={posts} tags={tags} />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default PageIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { contenttype: { eq: \"post\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n          image {\n            childImageSharp {\n              gatsbyImageData(width: 500, placeholder: BLURRED)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","name","summary","PostList","_ref","activeTags","setTags","posts","allMarkdownRemark","nodes","tags","onClickTag","tag","includes","filter","t","concat","_toConsumableArray","tagset","length","map","post","_post$frontmatter","console","log","title","frontmatter","fields","slug","push","apply","key","Link","to","itemProp","date","Set","tagLinks","classNames","active","onClick","current","storedValue","useDebounceCallback","callback","wait","leading","storedCallback","timeout","deps","clearTimeout","_ref2","args","arguments","setTimeout","target","type","listener","cleanup","storedListener","storedCleanup","targetEl","didUnsubscribe","this","addEventListener","removeEventListener","emptyObj","win","window","wv","visualViewport","getSize","document","documentElement","clientWidth","clientHeight","useWindowSize","options","initialWidth","initialHeight","size","setDebouncedSize","initialState","state","useDebounce","setSize","fn","areEqual","equal","defaultAreEqual","value","prev","constructor","val","set","get","k","v","createCache","obj","e","cache","mapConstructors","item","g","s","constructors","depth","baseCache","base","i","node","one","memo","elementsCache","WeakMap","useForceUpdate","setState","__reactCreateElement__","didEverMount","createRenderElement","RenderComponent","index","columnWidth","width","getContainerStyle","isScrolling","estimateHeight","position","maxWidth","height","Math","ceil","maxHeight","willChange","pointerEvents","cmp2","pargs","assignUserStyle","containerStyle","userStyle","Object","assign","defaultGetItemKey","_","getCachedSize","zIndex","visibility","writingMode","getRefSetter","positioner","resizeObserver","el","observe","offsetHeight","u","p","performance","Date","now","af","Caf","Raf","raf","bind","caf","lastTime","curr","next","max","h","clearRequestTimeout","handle","requestTimeout","ms","start","loop","call","perf","useThrottleCallback","fps","trailingTimeout","clearTrailing","rightNow","getScrollY","scrollY","pageYOffset","useThrottle","MasonryScroller","props","scrollTop","offset","setIsScrolling","didMount","useScroller","scrollFps","stopIndex","items","as","ContainerComponent","id","style","role","tabIndex","containerRef","itemAs","ItemComponent","itemStyle","itemHeightEstimate","itemKey","overscanBy","render","onRender","startIndex","forceUpdate","setItemRef","itemCount","columnCount","range","shortestColumn","measuredCount","shortestColumnSize","children","itemRole","undefined","storedOnRender","rangeEnd","needsFreshBatch","left","top","phaseTwoStyle","ref","min","batchSize","phaseOneStyle","useMasonry","createElement","emptyArr","RED","BLACK","DELETE","KEEP","NULL_NODE","low","high","C","P","R","L","list","updateMax","updateMaxUp","x","rotateLeft","tree","y","root","rotateRight","replaceNode","createIntervalTree","indexMap","insert","treeNode","prevNode","addInterval","z","fixInsert","remove","intervalResult","removeInterval","originalYColor","minimumTree","w","fixRemove","search","stack","pop","createPositioner","columnGutter","rowGutter","intervalTree","columnHeights","Array","columnItems","column","update","updates","columns","j","itemsInColumn","binarySearch","startItem","lo","hi","renderCallback","defaultItemHeight","tallestColumn","all","a","l","m","getColumns","minimumWidth","gutter","maxColumnCount","floor","Infinity","lastArgs","frameId","wrapperFn","_len","_key","requestAnimationFrame","cancel","cancelAnimationFrame","handler","createResizeObserver","updater","commonHandler","handlers","Map","ro","ResizeObserver","entries","entry","disconnect","forEach","defaultState","prevTop","Masonry","windowSize","ssrWidth","ssrHeight","containerPos","elementRef","containerPosition","setContainerPosition","offsetTop","offsetParent","offsetWidth","useContainerPosition","nextProps","initPositioner","computedColumnWidth","computedColumnCount","positionerRef","prevDeps","opts","prevOpts","optsChanged","every","prevPositioner","cacheSize","pos","usePositioner","useResizeObserver","scrollToIndex","_latestOptions$curren","align","element","innerHeight","latestOptions","getTarget","latestElement","dispatch","action","nextState","_action$value","throttledDispatch","currentTop","scrollTo","estimatedTop","useScrollToIndex","AllPosts","reduce","n","PostDisplay","image","getImage","itemScope","itemType","GatsbyImage","dangerouslySetInnerHTML","__html","description","excerpt","location","siteTitle","_n$frontmatter$tags","some","Layout","Seo","hasOwn","hasOwnProperty","classes","arg","appendClass","parseValue","isArray","toString","prototype","newClass","module","exports","default"],"sourceRoot":""}